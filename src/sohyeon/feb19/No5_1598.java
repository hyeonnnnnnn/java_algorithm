package sohyeon.feb19;

import java.util.Scanner;

/*
 * 문제
동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그 녀석은 원주 부근을 돌아다니다가 코레스코 콘도에서 아주 재밌는 놀이를 발견했다.

그 놀이의 이름은 바로 “꼬리를 무는 숫자 나열”. 이제부터 원숭이가 그토록 좋아하던 그 놀이를 파헤쳐보자.

놀이의 방법은 간단하다. 일단 4줄짜리 표에 왼쪽부터 수를 아래로 1부터 순서대로 적어나간다. 다음에 그 예가 잘 나타나있다.

이제 원숭이는 두 개의 자연수를 아무거나 생각한다. 그리고 숫자판에서 두 개의 자연수 사이의 직각거리를 구하면 된다. 여기서 직각거리는 동서방향거리와 남북방향거리의 합을 뜻한다.

예를 들어 저 숫자판에서 11과 33을 생각했다고 하자. 그렇다면 11과 33사이의 직각거리는 8이 된다.(동서방향거리 : 6, 남북방향거리 : 2) 다음 그림에 잘 나타나있다.

하지만 원숭이는 지금 혼란스럽다. 동물원에서 탈출한지 얼마 되지 않아서 계산을 할 수 없는 경지에 이르렀다. 여러분이 불쌍한 원숭이를 좀 도와줘야겠다.

원숭이가 생각한 두 자연수 사이의 직각거리를 구하는 프로그램을 작성하시오.
--
첫째 줄에 원숭이가 생각한 두 개의 자연수가 주어진다. 각 수는 10,000,000 이하이다.
--
첫째 줄에 원숭이가 생각한 두 개의 자연수 사이의 직각거리를 출력한다.
--
예제 입력 1 
11 33
예제 출력 1 
8
*/

public class No5_1598 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc = new Scanner(System.in);
		
		int num1 = sc.nextInt();				// 수1 입력
		int num2 = sc.nextInt();				// 수2 입력
		int x1, x2, y1, y2;						// 수1, 수2 좌표 정의
		
		if(num1 % 4 == 0) {						// 수1 4의 배수일 때
			x1 = 3;								// 수1 x좌표 3 고정
			y1 = num1 / 4 - 1;					// 수1 y좌표
			System.out.println("// num1("+x1+","+y1+")");
			
		} else {
			x1 = num1 % 4 - 1;					// 수1 x좌표
			y1 = num1 / 4;						// 수1 y좌표
			System.out.println("// num1("+x1+","+y1+")");
		}
		
		if(num2 % 4 == 0) {						// 수2 4의 배수일 때
			x2 = 3;								// 수2 x좌표 3 고정
			y2 = num2 / 4 - 1;					// 수2 y좌표
			System.out.println("// num2("+x2+","+y2+")");
			
		} else {
			x2 = num2 % 4 - 1;					// 수2 x좌표
			y2 = num2 / 4;						// 수2 y좌표
			System.out.println("// num2("+x2+","+y2+")");
		}
		
		
		int result = Math.abs(x1 - x2) + Math.abs(y1 - y2);			// 각 좌표 num1(x1, y1) num2(x2, y2) 차이 절댓값의 차이 더하면 직각거리
		
		sc.close();
		
		System.out.println(result);
	}

}
