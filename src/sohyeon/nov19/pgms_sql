1. 133027
-- 코드를 입력하세요
SELECT T.FLAVOR
  FROM (
            SELECT FH.FLAVOR
                 , SUM(FH.TOTAL_ORDER) + SUM(J.TOTAL_ORDER) AS TOTAL
              FROM FIRST_HALF FH
        INNER JOIN JULY J ON FH.FLAVOR = J.FLAVOR
          GROUP BY FH.FLAVOR
          ORDER BY TOTAL DESC
       ) T
 WHERE ROWNUM <= 3
 
-----------------------------------------------------------------------------

2. 132204
-- 코드를 입력하세요
SELECT A.APNT_NO
     , P.PT_NAME
     , P.PT_NO
     , D.MCDP_CD
     , D.DR_NAME
     , A.APNT_YMD
FROM PATIENT P, DOCTOR D, APPOINTMENT A
WHERE P.PT_NO = A.PT_NO
AND D.DR_ID = MDDR_ID
AND A.APNT_CNCL_YN = 'N'
AND TO_CHAR(A.APNT_YMD, 'YYYYMMDD') = '20220413'
AND D.MCDP_CD = 'CS'
ORDER BY A.APNT_YMD
 
-----------------------------------------------------------------------------

3. 131537
-- 코드를 입력하세요
SELECT *
    FROM (
        SELECT TO_CHAR(SALES_DATE, 'YYYY-MM-DD') AS SALES_DATE
             , PRODUCT_ID
             , USER_ID
             , SALES_AMOUNT
          FROM ONLINE_SALE
         WHERE TO_CHAR(SALES_DATE, 'YYYYMM') = '202203'
     UNION ALL
        SELECT TO_CHAR(SALES_DATE, 'YYYY-MM-DD') AS SALES_DATE
             , PRODUCT_ID
             , NULL AS USER_ID
             , SALES_AMOUNT
          FROM OFFLINE_SALE
         WHERE TO_CHAR(SALES_DATE, 'YYYYMM') = '202203'
    )
ORDER BY SALES_DATE, PRODUCT_ID, USER_ID
 
-----------------------------------------------------------------------------

4. 131532
-- 코드를 입력하세요
SELECT TO_CHAR(OS.SALES_DATE, 'YYYY') AS YEAR
          , TO_CHAR(OS.SALES_DATE, 'MM')   AS MONTH
          , UI.GENDER
          , COUNT(DISTINCT OS.USER_ID)     AS USERS
       FROM USER_INFO UI
 INNER JOIN ONLINE_SALE OS ON UI.USER_ID = OS.USER_ID
      WHERE UI.GENDER IS NOT NULL
   GROUP BY TO_CHAR(OS.SALES_DATE, 'YYYY'), TO_CHAR(OS.SALES_DATE, 'MM'), UI.GENDER
   ORDER BY YEAR, MONTH, GENDER
 
-----------------------------------------------------------------------------

5. 131124
-- 코드를 입력하세요
SELECT MP.MEMBER_NAME                        AS MEMBER_NAME
         , RR.REVIEW_TEXT                        AS REVIEW_TEXT
         , TO_CHAR(RR.REVIEW_DATE, 'YYYY-MM-DD') AS REVIEW_DATE
      FROM MEMBER_PROFILE MP
INNER JOIN REST_REVIEW RR ON MP.MEMBER_ID = RR.MEMBER_ID
     WHERE RR.MEMBER_ID IN (
                            SELECT MEMBER_ID
                              FROM REST_REVIEW
                          GROUP BY MEMBER_ID
                            HAVING COUNT(*) = ( SELECT MAX(COUNT(*))
                                                  FROM REST_REVIEW
                                              GROUP BY MEMBER_ID
                                              )
                            )
  ORDER BY RR.REVIEW_DATE
